apply plugin: 'com.android.library'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion rootProject.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName

        consumerProguardFiles 'consumer-rules.pro'

        //ARouter配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly rootProject.depsLibs.appcompat
    compileOnly rootProject.depsLibs.design
    compileOnly rootProject.depsLibs.recyclerview
    //eventbus类库依赖
    compileOnly rootProject.depsLibs.eventbus
    //gson解析库
    compileOnly rootProject.depsLibs.gson
    //arouter库
    compileOnly(rootProject.depsLibs.arouterapi) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.depsLibs.aroutercompiler
    //网络请求库
    compileOnly project(':lib_network')
    //业务基础库
    compileOnly project(':lib_base')
    //基础UI库
    compileOnly project(':lib_common_ui')
    compileOnly project(':lib_image_loader')
    compileOnly project(':lib_video')
    compileOnly project(':lib_model')
}

//引入Replugin插件
//apply plugin: 'replugin-plugin-gradle'
//
//repluginPluginConfig{
//    pluginName = 'ft_home'//指定当前插件最终名字
//    hostApplicationId = 'com.marco.voice'//定义宿主ApplicationId
//    hostAppLauncherActivity = 'com.marco.ft_market.view.splash.LoadingActivity'//宿主工程启动Activity
//}

//引入Replugin依赖
dependencies {
    compileOnly 'com.qihoo360.replugin:replugin-plugin-lib:2.3.3'
}
